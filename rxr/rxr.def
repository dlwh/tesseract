Bootstrap: docker
From: nvidia/cudagl:10.1-devel
Stage: build

%environment
    # Ensure MiniConda on Path
    PATH="/usr/local/miniconda/bin:$PATH"

    # Add MatterportSimulator (NOTE Fixed Bind Point!) to Python Path
    PYTHONPATH=/home/RxR/Matterport3DSimulator/build

%post
    # Generic Updates
    apt-get -y update
    apt-get -y install curl git gzip less tar unzip vim wget

    # Export CUDNN Version (as of November 2020) and Install
    export CUDNN_VERSION=8.0.5.39
    apt-get install -y --no-install-recommends libcudnn8=$CUDNN_VERSION-1+cuda10.1 libcudnn8-dev=$CUDNN_VERSION-1+cuda10.1
    apt-mark hold libcudnn8 && rm -rf /var/lib/apt/lists/*

    # Support both EGL and OSMESA Options
    export DEBIAN_FRONTEND=noninteractive
    apt-get update
    apt-get install -y doxygen libjsoncpp-dev libepoxy-dev libglm-dev libosmesa6 libosmesa6-dev libglew-dev libopencv-dev

    # Python Install
    apt install -y software-properties-common
    add-apt-repository -y ppa:deadsnakes/ppa
    apt update
    apt install -y python3.8 python3-distutils python3-apt python-numpy

    # Install Latest CMake
    wget https://github.com/Kitware/CMake/releases/download/v3.20.0-rc1/cmake-3.20.0-rc1-Linux-x86_64.sh
    mkdir /opt/cmake
    sh cmake-3.20.0-rc1-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
    ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
    cmake --version

    # Install MiniConda for Python Environment Management!
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
    /bin/bash ~/miniconda.sh -bfp /usr/local/miniconda
    rm ~/miniconda.sh

    # Set Path
    export PATH="/usr/local/miniconda/bin:$PATH"

    # Set MiniConda Path for EVERYONE
    ln -s /usr/local/miniconda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
    echo ". /usr/local/miniconda/etc/profile.d/conda.sh" >> $SINGULARITY_ENVIRONMENT
    . /usr/local/miniconda/etc/profile.d/conda.sh

    # Conda configuration of channels from .condarc file
    conda config --file /.condarc --add channels defaults
    conda config --file /.condarc --add channels conda-forge
    conda update conda

    # Create rxr Conda Environment
    conda create -y --name rxr python=3.8
    conda activate rxr
    conda install conda-build ipython numpy
    pip install torch==1.7.1+cu101 torchvision==0.8.2+cu101 torchaudio==0.7.2 -f https://download.pytorch.org/whl/torch_stable.html
    pip install aim typed-argument-parser h5py matplotlib wandb
    pip install --upgrade numpy

    # Versioning & Timestamping
    CONTAINER_NAME="rxr"
    CONTAINER_VERSION="0.0.1"
    NOW=`date`
    echo "export CONTAINER_NAME=\"${CONTAINER_NAME}\"" >> $SINGULARITY_ENVIRONMENT
    echo "export CONTAINER_VERSION=\"${CONTAINER_VERSION}\"" >> $SINGULARITY_ENVIRONMENT
    echo "export NOW=\"${NOW}\"" >> $SINGULARITY_ENVIRONMENT

%runscript
    echo "Running with Container '$CONTAINER_NAME' -- Version '$CONTAINER_VERSION' -- Created at $NOW"
    echo "Arguments received: $*"
    exec "$@"

%labels
    Author Siddharth Karamcheti
    Email skaramcheti@cs.stanford.edu
    Organization Pantheon-616
    Version v0.0.1

%help
    This is a default Ubuntu 18.04 container geared for Room x/2/4 Room Experiments, with emphasis on development and
    sane defaults.
